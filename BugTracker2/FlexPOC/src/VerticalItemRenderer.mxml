<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer 
    creationComplete="createDataHolders(event)"
    xmlns:fx="http://ns.adobe.com/mxml/2009"
    xmlns:s="library://ns.adobe.com/flex/spark"
    xmlns:mx="library://ns.adobe.com/flex/mx"
    autoDrawBackground="true">
    <fx:Script>
        <![CDATA[
            import mx.binding.utils.BindingUtils;
            import mx.collections.ArrayCollection;
            import mx.events.FlexEvent;
            import mx.states.OverrideBase;
            import spark.components.Label;

            public var dataIds:Array = new Array();

            [Bindable]
            public var myData:BindableObj = new BindableObj();

            [Bindable]
            public var verticalMetaData:ArrayCollection;

            override public function set data(value:Object):void
            {
                super.data = value;

                trace('Setting data: total elements ' + dataIds.length);

                /* for each (var o:Object in dataIds)
                {
                    myData[o] = value[o];

                    trace(o + ' :: myData[o]: ' + myData[o] + ', value[o]' + value[o]);


                    trace('Total elements: ' + verticalData.numElements)

                    Label(verticalData.getChildByName(o.toString())).text = value[o].toString();

                    trace('done for ' + value[o]);
                } */

                for (var i:int = 0; i < verticalData.numElements; i++)
                {
                    var currentGroup:Object = verticalData.getElementAt(i);

                    trace('currentGroup ID: ' + currentGroup.id)

                    Label(currentGroup).text = value[Label(currentGroup).text];
                    Label(currentGroup).toolTip = value[Label(currentGroup).text];

                }

                this.toolTip = value[0].toString();




            }

            override protected function createChildren():void
            {
                super.createChildren();

                trace('Inside create children');

                for each (var item:Object in verticalMetaData)
                {
                    //  var info:VerticalDataVO = item as VerticalDataVO;

                    trace('creating' + item.AttrName);

                    var tf:Label = new Label();

                    tf.id = item.dataId;
                    tf.text = item.dataId;
                    tf.left = "4";
                    tf.right = "4";
                    tf.top = "4";
                    tf.bottom = "4";

                    dataIds.push(item.dataId);



                    // BindingUtils.bindProperty(tf, 'text', data, item.dataId);

                    verticalData.addElement(tf);
                }


            }

            protected function createDataHolders(event:FlexEvent):void
            {

            }
        ]]>
    </fx:Script>
    <s:VGroup id="verticalData"
        width="100%" height="100%"
        left="4" right="4" top="4" bottom="4">
    </s:VGroup>
</s:ItemRenderer>
